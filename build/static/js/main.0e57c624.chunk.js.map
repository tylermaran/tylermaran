{"version":3,"sources":["components/Header.jsx","components/Phone.jsx","components/Project.jsx","components/Footer.jsx","components/About.jsx","pages/Landing.jsx","pages/Testing.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","className","target","href","Phone","props","style","backgroundImage","image","Project","project","desktop_image","mobile_image","Footer","About","Landing","useState","featured","setFeatured","all_projects","projectData","map","key","name","projects","all","featured_highlight","onClick","backgroundColor","all_highlight","Testing","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e57c624.chunk.js","sourcesContent":["// Importing Dependencies\r\nimport React from 'react';\r\n\r\n// Importing Styling\r\nimport './Header.css';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1 className=\"my_name\">Tyler Maran:</h1>\r\n            <h2 className=\"subtext\">I build things</h2>\r\n            <div className=\"links\">\r\n                <div className=\"github_profile\"><a target=\"new\" href=\"https://github.com/tylermaran\"><span className=\"git_logo\"></span></a></div>\r\n                <div className=\"linkedin_portfolio\"><a target=\"new\" href=\"https://github.com/tylermaran\"><span className=\"linkedin_logo\"></span></a></div>\r\n            </div>\r\n            <hr className=\"line_break\"/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","// Importing Dependencies\r\nimport React from 'react';\r\n\r\n// Importing Styles\r\nimport './Phone.css'\r\n\r\nconst Phone = (props) => {\r\n\r\n    const style = {\r\n\t\tbackgroundImage: 'url(' + props.image + ')'\r\n\t}\r\n\r\n    return (\r\n        <div className='phone'>\r\n            <div className=\"phone_inner\">\r\n                <div className=\"phone_image\" style={style}>\r\n                    <div className=\"phone_glare\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Phone;","// Importing Dependencies\r\nimport React from 'react';\r\n\r\n// Importing Components\r\nimport Phone from './Phone';\r\n\r\n// Importing Styling\r\nimport './Project.css';\r\n\r\nconst Project = (props) => {\r\n\t// const [key, setKey] = useState('home');\r\n\tconst style = {\r\n\t\tbackgroundImage: 'url(' + props.project.desktop_image + ')'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"project\">\r\n\t\t\t<div className=\"desktop_image\">\r\n\t\t\t\t<div className=\"project_image\" style={style}>\r\n\t\t\t\t\t<div className=\"phone_container\">\r\n\t\t\t\t\t\t<Phone image={props.project.mobile_image}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"project_detail\">\r\n\t\t\t\t<div className=\"visit\">\r\n\t\t\t\t\t<div className=\"link_logo\"></div>\r\n\t\t\t\t\t<div className=\"site_link\">Visit</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"github\">\r\n\t\t\t\t\t<div className=\"git_logo\"></div>\r\n\t\t\t\t\t<div className=\"git_link\">&#60;Code/&#62;</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Project;","// Importing Dependencies\r\nimport React from 'react';\r\n\r\n// Importing Styles\r\nimport './Footer.css'\r\n\r\nconst Footer = (props) => {\r\n\r\n    return (\r\n        <div className='footer'>\r\n            <p>A footer!</p>\r\n            <p>Because pages need these, right?</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","// Importing Dependencies\r\nimport React from 'react';\r\n\r\n// Importing Styles\r\nimport './About.css'\r\n\r\nconst About = (props) => {\r\n\r\n    return (\r\n        <div className='about'>\r\n            <p>Welcome to tylermaran.com! Featuring all things Tyler.</p>\r\n            <p>I live and work in San Francisco as a web developer, and hobbiest builder of just about anything. \r\n                Lately, I have been heavily involved in 3D design . I received a BS in Economics, and began my career in M&amp;A Banking, before taking on additonal education in CS. </p>\r\n            <p>I am the Treasurer of <a href=\"http://www.noisebridge.net\" target=\"new\">NoiseBridge Hackerspace</a>, a 501(c)(3) non profit facility that provides tools, equipment, and classes on everything from Network Security to Sewing</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default About;","// Importing Dependencies\r\nimport React, { useState } from 'react';\r\n\r\n// Importing Components\r\nimport Header from '../components/Header';\r\nimport Project from '../components/Project';\r\nimport Footer from '../components/Footer';\r\nimport About from '../components/About';\r\n\r\n// Importing Styling\r\nimport './Landing.css';\r\n\r\n// Importing JSON Data\r\nimport projectData from '../projects.json';\r\n\r\nconst Landing = () => {\r\n    const [featured, setFeatured] = useState(true);\r\n\r\n    const map_projects = project => {\r\n        return (\r\n            <div className=\"project_container\" key={project.name}>\r\n                <Project project={project} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    let all_projects = projectData.map(map_projects);\r\n\r\n    let projects = (\r\n        <>\r\n            <h3 className=\"sub_title\">Full Stack</h3>\r\n            <div className=\"project_container\">\r\n                <Project project={projectData[2]} />\r\n            </div>\r\n            <div className=\"project_container\">\r\n                <Project project={projectData[0]} />\r\n            </div>\r\n\r\n            <h3 className=\"sub_title\">For fun</h3>\r\n            <div className=\"project_container\">\r\n                <Project project={projectData[3]} />\r\n            </div>\r\n            <div className=\"project_container\">\r\n                <Project project={projectData[5]} />\r\n            </div>\r\n\r\n            <h3 className=\"sub_title\">Front End</h3>\r\n            <div className=\"project_container\">\r\n                <Project project={projectData[1]} />\r\n            </div>\r\n            <div className=\"project_container\">\r\n                <Project project={projectData[4]} />\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    let all = (\r\n        <>\r\n            <h3 className=\"sub_title\">All Projects</h3>\r\n            {all_projects}\r\n        </>\r\n    );\r\n\r\n    let featured_highlight = (\r\n        <div className=\"switcher\">\r\n            <div\r\n                className=\"featured_button\"\r\n                onClick={() => setFeatured(true)}\r\n                style={{ backgroundColor: 'rgb(30,30,30)' }}\r\n            >\r\n                Featured\r\n            </div>\r\n            <div className=\"all_button\" onClick={() => setFeatured(false)}>\r\n                All Projects\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    let all_highlight = (\r\n        <div className=\"switcher\">\r\n            <div className=\"featured_button\" onClick={() => setFeatured(true)}>\r\n                Featured\r\n            </div>\r\n            <div\r\n                className=\"all_button\"\r\n                onClick={() => setFeatured(false)}\r\n                style={{ backgroundColor: 'rgb(30,30,30)' }}\r\n            >\r\n                All Projects\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"landing\">\r\n            <Header />\r\n            <About />\r\n            <br />\r\n\r\n            {featured ? featured_highlight : all_highlight}\r\n            {featured ? projects : all}\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","// Importing Dependencies\r\nimport React from 'react';\r\n\r\n// Importing Components\r\nimport Header from '../components/Header';\r\nimport Phone from '../components/Phone';\r\nimport Footer from '../components/Footer';\r\n\r\n// Importing Styling\r\nimport './Testing.css';\r\n\r\nconst Testing = () => {\r\n\r\n    return (\r\n        <div className=\"Testing\">\r\n            <Header/>\r\n            <div className=\"content\">\r\n\r\n                <div className=\"container\">\r\n                    <Phone/>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n            \r\n            <Footer/>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Testing;","// Importing Dependencies\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Importing Components\nimport Landing from './pages/Landing';\nimport Testing from './pages/Testing';\n\n// Importing Styling\nimport './App.css';\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={Landing}/>\n\t\t\t\t\t<Route exact path='/testing' component={Testing}/>\n\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}